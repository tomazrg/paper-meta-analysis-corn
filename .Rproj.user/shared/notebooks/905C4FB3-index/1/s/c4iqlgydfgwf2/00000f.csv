"0",""
"0","preco_saca = seq(30,60,by = 5)"
"0","custo_fungicida = seq(100, 800,by = 100)"
"0",""
"0","econ <- as.data.frame(mod_means)"
"0",""
"0",""
"0","library(purrr)"
"0",""
"0","economic <- map_dfr(1:nrow(econ), function(i) {"
"0","  df_row <- econ[i, ]"
"0","  expand.grid(preco_saca = preco_saca, custo_fungicida = custo_fungicida) %>%"
"0","    mutate(across(everything(), as.numeric)) %>%"
"0","    mutate(across(.cols = everything(), .fns = identity)) %>%"
"0","    bind_cols(df_row[rep(1, nrow(.)), ])"
"0","})"
"0",""
"0",""
"0"," ec = economic %>%"
"0","  #group_by(pressao,season,preco_saca, custo_fungicida) %>% "
"0","  dplyr::mutate("
"0","    ganho_kg = emmean,"
"0","    se_dif = SE,"
"0","    lower_kg = emmean - 1.96 * SE,"
"0","    upper_kg = emmean + 1.96 * SE,"
"0",""
"0","    ganho_sacas = ganho_kg / 60,"
"0","    lower_sacas = lower_kg / 60,"
"0","    upper_sacas = upper_kg / 60,"
"0",""
"0","    income = ganho_sacas * preco_saca,"
"0","    income_lower = lower_sacas * preco_saca,"
"0","    income_upper = upper_sacas * preco_saca,"
"0","    return = income - custo_fungicida,"
"0","    return_lower = income_lower - custo_fungicida,"
"0","    return_upper = income_upper - custo_fungicida,"
"0","    profit  = (income>=custo_fungicida)*1"
"0",") %>% "
"0","   group_by(custo_fungicida,preco_saca,season,pressao) %>% "
"0","  summarise(n = n(), sumn = sum(profit), prob = sumn / n,"
"0","            return = mean(return),"
"0","            return_lower = mean(return_lower),"
"0","            return_upper = mean(return_upper))"
"2","`summarise()` has grouped output by 'custo_fungicida', 'preco_saca', 'season'. You can override using the `.groups` argument."
